process ConvertedPhoton = 
{

service = MessageLogger {
#          untracked vstring destinations = {"cout"}
          untracked PSet cout = {
                        untracked string threshold = "INFO"
              #          untracked string threshold = "DEBUG"
                        untracked PSet default = { untracked int32 limit = -1  }
                      }

#		 untracked vstring categories =
#  {
#    "TrackingTools/TrackFitters"
#  }



        #   untracked vstring debugModules = { "TrackFitters"}
  }


 source = PoolSource 
  {
    # Number of events program should run
    # untracked vstring fileNames = {'file:/tmp/nancy/RelVal102SingleEPt35.root'}
    untracked vstring fileNames = {'file:/tmp/nancy/RelVal120SingleGammaPt35.root'}	
   

    untracked int32 maxEvents = 100
  }


# initialize magnetic field
include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"

include "Geometry/CMSCommonData/data/cmsMagneticFieldXML.cfi"

# for the geometry:
# full detector geometry
include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"

#--------------------------------
# Ecalgeometry for clustering
#--------------------------------
#include "RecoEcal/EgammaClusterProducers/data/geometryForClustering.cff"
#include "Geometry/CaloEventSetup/test/data/testCaloConfiguration.cfi"

include "Geometry/CaloEventSetup/data/CaloGeometry.cfi"

### Ecal clustering
# create sequence for island clustering
include "RecoEcal/EgammaClusterProducers/data/islandClusteringSequence.cff"

# hybrid clustering sequence
include "RecoEcal/EgammaClusterProducers/data/hybridClusteringSequence.cff"

# clusters in preshower
include "RecoEcal/EgammaClusterProducers/data/preshowerClusteringSequence.cff"

# create path with all clustering algos
# NB: preshower MUST be run after island clustering in the endcap
sequence ecalClusteringSequence = {
                                    islandClusteringSequence,
                                    hybridClusteringSequence,
                                    preshowerClusteringSequence
                                  }






############### Tracker geometry #####################
include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"
include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"
include "RecoTracker/GeometryESProducer/data/TrackerRecoGeometryESProducer.cfi"

# stripCPE
include "RecoLocalTracker/SiStripRecHitConverter/data/StripCPEfromTrackAngle.cfi"
include "RecoLocalTracker/SiStripRecHitConverter/data/SiStripRecHitMatcher.cfi"

# pixelCPE
include "RecoLocalTracker/SiPixelRecHits/data/PixelCPEParmError.cfi"

#TransientTrackingBuilder
include "RecoTracker/TransientTrackingRecHit/data/TransientTrackingRecHitBuilder.cfi"

# MeasurementTracker
include "RecoTracker/MeasurementDet/data/MeasurementTrackerESProducer.cfi"


# TransientTracks
include "TrackingTools/TransientTrack/data/TransientTrackBuilder.cfi"


include "RecoTracker/CkfPattern/data/CkfTrajectoryBuilderESProducer.cfi"
# override some parameters for my own purposes

#TrajectoryBuilder
es_module TrajectoryBuilderForConversions = CkfTrajectoryBuilder from "RecoTracker/CkfPattern/data/CkfTrajectoryBuilderESProducer.cfi"
replace TrajectoryBuilderForConversions.ComponentName = "TrajectoryBuilderForConversions"
replace TrajectoryBuilderForConversions.minimumNumberOfHits = 3



############## Configure the fitters for  Out In Tracking 
#TrackProducers
module ckfOutInTracksFromConversions = TrackProducer
{
  string Fitter = "KFFittingSmootherForOutIn"	
  string Propagator = "PropagatorWithMaterial"
  string producer = "conversionTrackCandidates"
  string src = "outInTracksFromConversions"
  string TTRHBuilder       =   "WithTrackAngle"
  bool TrajectoryInEvent = false
}
#KFTrajectoryFitterESProducer
es_module  KFTrajectoryFitterForOutIn = KFTrajectoryFitter from "TrackingTools/TrackFitters/data/KFTrajectoryFitterESProducer.cfi"
replace  KFTrajectoryFitterForOutIn.ComponentName = "KFFitterForOutIn"
replace  KFTrajectoryFitterForOutIn.Propagator = "PropagatorWithMaterialOpposite"
# KFTrajectorySmootherESProducer
es_module  KFTrajectorySmootherForOutIn = KFTrajectorySmoother from "TrackingTools/TrackFitters/data/KFTrajectorySmootherESProducer.cfi"
replace  KFTrajectorySmootherForOutIn.ComponentName = "KFSmootherForOutIn"
replace  KFTrajectorySmootherForOutIn.Propagator = "PropagatorWithMaterial"
# KFFittingSmootherESProducer
es_module  KFFittingSmootherForOutIn = KFFittingSmoother from "TrackingTools/TrackFitters/data/KFFittingSmootherESProducer.cfi"
replace  KFFittingSmootherForOutIn.ComponentName = "KFFittingSmootherForOutIn"
replace  KFFittingSmootherForOutIn.Fitter = "KFFitterForOutIn"
replace  KFFittingSmootherForOutIn.Smoother = "KFSmootherForOutIn"



############## Configure the fitters for In Out Tracking 

module ckfInOutTracksFromConversions = TrackProducer
{
  string Fitter = "KFFittingSmootherForInOut"
  string Propagator = "PropagatorWithMaterial"
  string producer = "conversionTrackCandidates"
  string src = "inOutTracksFromConversions"
  string TTRHBuilder       =   "WithTrackAngle"
  bool TrajectoryInEvent = false
}
#KFTrajectoryFitterESProducer
es_module  KFTrajectoryFitterForInOut = KFTrajectoryFitter from "TrackingTools/TrackFitters/data/KFTrajectoryFitterESProducer.cfi"
replace  KFTrajectoryFitterForInOut.ComponentName = "KFFitterForInOut"
replace  KFTrajectoryFitterForInOut.Propagator = "PropagatorWithMaterial"
# KFTrajectorySmootherESProducer
es_module  KFTrajectorySmootherForInOut = KFTrajectorySmoother from "TrackingTools/TrackFitters/data/KFTrajectorySmootherESProducer.cfi"
replace  KFTrajectorySmootherForInOut.ComponentName = "KFSmootherForInOut"
replace  KFTrajectorySmootherForInOut.Propagator = "PropagatorWithMaterialOpposite"
# KFFittingSmootherESProducer
es_module  KFFittingSmootherForInOut = KFFittingSmoother from "TrackingTools/TrackFitters/data/KFFittingSmootherESProducer.cfi"
replace  KFFittingSmootherForInOut.ComponentName = "KFFittingSmootherForInOut"
replace  KFFittingSmootherForInOut.Fitter = "KFFitterForInOut"
replace  KFFittingSmootherForInOut.Smoother = "KFSmootherForInOut"






# additional stuff for the tracker

es_module = KFUpdatorESProducer
{
  string ComponentName = "KFUpdator"
}

# Chi2MeasurementEstimatorESProducer
include "TrackingTools/KalmanUpdators/data/Chi2MeasurementEstimatorESProducer.cfi"




es_module MaterialPropagator = PropagatorWithMaterialESProducer {
  string ComponentName = "PropagatorWithMaterial"
  string PropagationDirection = "alongMomentum"
  double Mass = 0.105
  double MaxDPhi              = 1.6
}

es_module OppositeMaterialPropagator = PropagatorWithMaterialESProducer {
  string ComponentName = "PropagatorWithMaterialOpposite"
  string PropagationDirection = "oppositeToMomentum"
  double Mass = 0.105
  double MaxDPhi              = 1.6
}





# sequence trackerRecHit = { siPixelClusters,siPixelRecHits,siStripClusters,siStripRecHits}
 sequence trackerRecHit  = { siStripClusters, siStripMatchedRecHits }

# photon sequence
include "RecoEgamma/EgammaPhotonProducers/data/convertedPhotonSequence.cff"

 path p1 = { ecalClusteringSequence, convertedPhotonSequence  }



  module o1 = PoolOutputModule
   { 
      untracked string fileName = "/tmp/nancy/RecoConversionsFromSingleGammaPt35GeV.root"
      #untracked string fileName = "/tmp/nancy/RecoConversionsFromSingleElePt35GeV.root"	

      untracked vstring outputCommands =
      {
         "drop *", 
         "keep *_g4SimHits_*_*",
         "keep edmHepMCProduct_*_*_*",
         "keep recoSuperClusters_*_*_*",
         "keep recoConvertedPhotons_*_*_*",
         "keep recoPhotons_*_*_*",
         "keep TrackCandidates_conversionTrackCandidates_*_*",
         "keep recoTracks_*_*_*",
         "keep recoTrackExtras_*_*_*"	
     }
   }


   endpath outpath = { o1 }





}


