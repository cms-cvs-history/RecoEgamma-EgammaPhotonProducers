process ConvertedPhoton = 
{

 source = PoolSource 
  {
    # Number of events program should run
     untracked vstring fileNames = {'file:/tmp/nancy/recoSingleGammaPt35_1.root',
                                   'file:/tmp/nancy/recoSingleGammaPt35_2.root' }
   

    untracked int32 maxEvents = 10
  }


# initialize magnetic field
include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"

include "Geometry/CMSCommonData/data/cmsMagneticFieldXML.cfi"

# for the geometry:
# full detector geometry
include "Geometry/CMSCommonData/data/cmsSimIdealGeometryXML.cfi"

#--------------------------------
# Ecalgeometry for clustering
#--------------------------------
#include "RecoEcal/EgammaClusterProducers/data/geometryForClustering.cff"
#include "Geometry/CaloEventSetup/test/data/testCaloConfiguration.cfi"
#include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"
include "Geometry/CaloEventSetup/data/CaloGeometry.cfi"


############### Tracker geometry #####################
include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"
include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"
include "RecoTracker/GeometryESProducer/data/TrackerRecoGeometryESProducer.cfi"

### Pixel Clusterizer and RecHit producer modules
include "RecoLocalTracker/SiPixelClusterizer/data/SiPixelClusterizer.cfi"
include "RecoLocalTracker/SiPixelRecHits/data/SiPixelRecHits.cfi"

### SiliconStrip Clusterizer and RecHit producer modules
include "RecoLocalTracker/SiStripClusterizer/data/SiStripClusterizer_SimData.cfi"
include "RecoLocalTracker/SiStripRecHitConverter/data/SiStripRecHitConverter.cfi" 
include "RecoLocalTracker/SiStripRecHitConverter/data/StripCPEfromTrackAngle.cfi"  
include "RecoTracker/TransientTrackingRecHit/data/TransientTrackingRecHitBuilder.cfi"
include "RecoLocalTracker/SiPixelRecHits/data/PixelCPEParmError.cfi"


include "RecoEcal/EgammaClusterProducers/data/islandClusteringSequence.cff"
include "RecoEcal/EgammaClusterProducers/data/hybridClusteringSequence.cff"


  # supercluster producer
#  module superclusterproducer = SuperClusterProducer
 # {
 #   string superclusterCollection = "superclusterCollection"
 # }



# additional stuff for the tracker

es_module = KFUpdatorESProducer
{
  string ComponentName = "KFUpdator"
}

# Chi2MeasurementEstimatorESProducer
include "TrackingTools/KalmanUpdators/data/Chi2MeasurementEstimatorESProducer.cfi"

# KFTrajectoryFitterESProducer
include "TrackingTools/TrackFitters/data/KFTrajectoryFitterESProducer.cfi"

# KFTrajectorySmootherESProducer
include "TrackingTools/TrackFitters/data/KFTrajectorySmootherESProducer.cfi"

# KFFittingSmootherESProducer
include "TrackingTools/TrackFitters/data/KFFittingSmootherESProducer.cfi"



es_module MaterialPropagator = PropagatorWithMaterialESProducer {
  string ComponentName = "PropagatorWithMaterial"
  string PropagationDirection = "alongMomentum"
  double Mass = 0.105
}

es_module OppositeMaterialPropagator = PropagatorWithMaterialESProducer {
  string ComponentName = "PropagatorWithMaterialOpposite"
  string PropagationDirection = "oppositeToMomentum"
  double Mass = 0.105
}


#  producer of converted photons
include "RecoEgamma/EgammaPhotonProducers/data/convertedPhotons.cfi"


 sequence trackerRecHit = { pixClust,pixRecHitConverter, ThreeThresholdClusterizer,LocalMeasurementConverter}
 sequence convPhoSeq = { convertedPhotons }

 path p1 = {islandClusteringSequence&hybridClusteringSequence, trackerRecHit, convPhoSeq }



  module o1 = PoolOutputModule
   { 
      untracked string fileName = "conversionsWithSinglePhotons35GeV.root"

      untracked vstring outputCommands =
      {
        "keep *"
      }
   }
   endpath outpath = { o1 }





}


